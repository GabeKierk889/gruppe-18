@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
'skinparam ParticipantPadding 30


package  services #DDDDDD {
() FieldsCreator
}

package  controllers #DDDDDD {
() GameController
}

package models {

class GameSettings {
    {static}+MINNUMOFPLAYERS: int
    {static}+MAXNUMOFPLAYERS: int
    {static}+STARTINGBALANCE: int
    {static}+STARTBONUS: int
    {static}+JAILFEE: int
    {static}+STATE_TAX_AMOUNT: int
    {static}+INCOME_TAX_AMOUNT: int
    {static}+INCOME_TAX_RATE: double
    {static}+MORTGAGE_INTEREST_MULTIPLIER: double
    {static}+HOUSE_RESELL_VALUE_MULTIPLIER: double
    {static}+MORTGAGE_INTEREST_ROUNDING: int
    {static}+HOUSE_RESELL_VALUE_MULTIPLIER: double
    {static}+GOTOJAIL_IF_THROW_SAME_DICE_X_TIMES: int

}

class Board {
    -fields: Field[]

    +ownsAllFieldsOfSameType(fieldArrayNum : int) : boolean
    +updateRentForAllFieldsOfSameType(fieldArrayNum : int) : void
    +numOfShippingFieldsOwned(playerNum : int) : int
    +numBuildingsOwnedByCurrentPlayer() : int[]
    +calculateAssetValueOfBuildingsOwned(playerNum : int) : int
    +calculateValueOfFieldsOwned(playerNum : int) : int
    +removeAllBuildingsOwned(playerNum : int) : void
    +calculateAvailableMortgageValueOfFieldsOwned(playerNum : int) : int
    bankruptcyTransferAllFieldAssets(oldOwnerPlayerNum : int, newOwnerPlayerNum : int) : void
    +buildHouse() : void
    +buildHotel() : void
    +sellHouse() : void
    +sellHotel() : void
}

class Player {
    -NAME: String
    -isBankrupt: Boolean
    -onField: int
    -ACCOUNT: Account
    -isInJail: Boolean
    -jailCard1: ChanceCard
    -jailCard2: ChanceCard
    -throwTwoOfSameDiceInARow: int

    +moveToField(fieldArrayNum : int) : void
    +moveSteps(stepsToMove : int) : int
    +hasAJailCard() : Boolean
    +giveJailCard(jailCard : ChanceCard) : void
    +returnJailCard() : ChanceCard
    +collectStartBonus(int diceThrow) : void
}


class Field {
    #FIELDNAME: String

    +landOnField(currentPlayerObject : Player) : void
}

class Account {
    -NAME: String
    -balance: int

    +depositMoney(deposit : int) : void
    +withdrawMoney(withdrawal : int) : void
    +withdrawMoney(withdrawal : int, creditorPlayerNum : int) : void
    +transferMoney(amount : int, recipientPlayerNum : int) : void
}

class DiceCup {
    -die1: Die
    -die2: Die

    +roll() : void
    +isSameFaceValue() : boolean
}

class Die {
    -facevalue: int
    -NUMOFSIDES: int

    +roll() : void
}

package FieldSubTypes <<Rectangle>> {

() FieldSubType

}

}


FieldsCreator ---* Board
Board *-- "40" Field
GameController *-- Board
GameController *--- DiceCup
GameController *-- Player
Player *-- Account
GameController --> GameSettings
Field <|-- FieldSubTypes
DiceCup *-- "2" Die


@enduml